#include <iostream>
#include <string>

using namespace std;

string fruits[] = {
        "Apple", "Banana", "Orange", "Pear", "Pineapple",
        "Mango", "Peach", "Kiwi", "Pomegranate", "Avocado"
};

struct Order {
    string name;
    int cost;
    double chance;
    
    Order* next = nullptr;
};

void push_back(Order* head, Order* element) {
    while (head->next) {
        head = head->next;
    }
    head->next = element;
}

void push_front(Order* &head, Order* element) {
    element->next = head;
    head = element;
}

void push_after(Order* head, unsigned short index, Order* element) {
    for (unsigned short i = 0; i != index; i++) {
        head = head->next;
    }
    
    element->next = head->next;
    head->next = element;
}

void push_before(Order* head, unsigned short index, Order* element) {
    Order* previous = nullptr;
    for (unsigned short i = 0; i != index; i++) {
        previous = head;
        head = head->next;
    }

    element->next = head;
    if (previous) previous->next = element;
}

void remove(Order* &head, int index) {
    Order* previous = nullptr;
    Order* current = head;
    for (unsigned short i = 0; i != index; i++) {
        previous = head;
        current = current->next;
    }

    if (previous) previous->next = current->next;
    else head = current->next;

    delete current;
}

void print(Order* head) {
    while (1) {
        cout << "name: " << head->name << endl;
        cout << "cost: " << head->cost << endl;
        cout << "chance: " << head->chance << endl << endl;
        if (head->next) {
            head = head->next;
        }
        else return;
    }
}

Order* generate_random_order() {
    int index = rand() % 10;
    int cost = rand() % 111 + 20;
    double chance = (rand() % 91 + 10) / 100.0;

    return new Order{fruits[index], cost, chance};
}

int main()
{
    srand(time(nullptr));

    Order* head = generate_random_order();
    cout << "One head without any elements" << endl;
    print(head);
    cout << "-----------------------------------" << endl;
    
    cout << "adding some random elements in the back (5 elements)" << endl;
    for (unsigned short i = 0; i != 5; i ++) push_back(head, generate_random_order());
    print(head);
    cout << "-----------------------------------" << endl;

    cout << "adding some random elements in the front (3 elements)" << endl;
    for (unsigned short i = 0; i != 3; i++) push_front(head, generate_random_order());
    print(head);
    cout << "-----------------------------------" << endl;

    cout << "adding some random elements after the second one (2 elements)" << endl;
    for (unsigned short i = 0; i != 2; i++) push_after(head, 1, generate_random_order());
    print(head);
    cout << "-----------------------------------" << endl;

    cout << "adding some random elements before the fifth one (2 elements)" << endl;
    for (unsigned short i = 0; i != 2; i++) push_before(head, 4, generate_random_order());
    print(head);
    cout << "-----------------------------------" << endl;

    cout << "deleting second element" << endl;
    remove(head, 1);
    print(head);
    cout << "-----------------------------------" << endl;

    return 0;
}
